# Para executar os comandos abaixo, basta digitar no terminal:
# make <command>

# Exemplo: make compose_up_dev

# ─────────────────────────────────────────────────────
# Scripts para o ambiente Docker de desenvolvimento

compose_up_dev:
	docker-compose -f docker-compose.dev.yml up -d

compose_down_dev:
	docker-compose -f docker-compose.dev.yml down --remove-orphans

compose_rm_images_dev:
	docker image rm dev_api_multiverse_travels_booker

# ─────────────────────────────────────────────────────
# Scripts para o ambiente Docker de produção

compose_up_prod:
	docker-compose up -d

compose_down_prod:
	docker-compose down --remove-orphans

compose_rm_images_prod:
	docker image rm api_multiverse_travels_booker

# ─────────────────────────────────────────────────────

# === Sam shortcut
# next lines are autogenerated and any changes will be discarded after regenerating
CRYSTAL_BIN ?= `which crystal`
SAM_PATH ?= sam.cr
.PHONY: sam
sam:
	$(CRYSTAL_BIN) run $(SAM_PATH) -- $(filter-out $@,$(MAKECMDGOALS))
%:
	@:
# === Sam shortcut

# Scripts mais usados do `jennifer ORM`:
#		sam db:setup
#		sam db:create
#		sam db:migrate
#		sam db:seed
#		sam db:drop

# ─────────────────────────────────────────────────────
# Outros scripts

install_dependencies:
	shards install && make install_sentry

start_dev:
	./sentry

build:
	crystal build --static --release src/api.cr -o bin/api

start:
	./bin/api

format:
	crystal tool format

test:
	crystal spec

install_sentry:
	crystal build --release lib/sentry/src/sentry_cli.cr -o ./sentry

generate_docs:
	crystal docs --output public/docs src/api.cr
